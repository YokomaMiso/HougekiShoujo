# 横間味噌ゲームビルドファイル
name: Run the build
on:
  workflow_dispatch: {}
  # mainへデータがプッシュされる度に自動でビルド
  push:
    branches:
      - main
      - 'build/**'
jobs:
  build:
    name: Run the ${{ matrix.targetPlatform }} build
    runs-on: windows-2022
    steps:
      # リポジトリのチェックアウト
      - name: Check out my unity project.
        uses: actions/checkout@v4
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      # LFSファイルのキャッシュを取得する
      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      # LFSファイルをPullする
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      # ファイル名にgitのハッシュを含めたいので$GITHUB_OUTPUTに保存しておく
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Unityプロジェクトのビルド
      - name: Run the build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2022.3.16f1

      # 成果物をZIPにしてアップロードする
      - name: Upload the Build File
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ github.sha }}
          path: build

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:

      # アーティファクトのダウンロード
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Build-${{ github.sha }}
          path: build

      - name: Compress files to ZIP
        run: |
          zip -r build-${{ github.sha }}.zip build

      #ドライブにもアップロードする
      - name: Upload to GoogleDrive
        uses: satackey/action-google-drive@v1
        with:
          skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
          google-client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          google-client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          upload-from: 'build-${{ github.sha }}.zip'
          upload-to: /BuildWindows